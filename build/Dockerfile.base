ARG FROM_IMAGE=ubuntu
ARG FROM_IMAGE_TAG=22.04
ARG EASY_INFRA_TAG
# The following arg is in case we have a {tool}-{environment} specific Dockerfile/frag combo.
# Dockerfile ARG instructions go out of scope at the end of the build stage where it was defined, so to use it in our multistage scenario it needs to
# be repeated for each stage
# https://docs.docker.com/engine/reference/builder/#scope
ARG EASY_INFRA_TAG_TOOL_ONLY

# The dockerfile base must start with FROM ... AS base
FROM "${FROM_IMAGE}":"${FROM_IMAGE_TAG}" AS base

ARG BUILDARCH
ARG TRACE="false"
ENV FAIL_FAST="false"
ARG EASY_INFRA_TAG
ENV EASY_INFRA_TAG="${EASY_INFRA_TAG}"
ARG EASY_INFRA_VERSION
ENV EASY_INFRA_VERSION="${EASY_INFRA_VERSION}"
ARG GIT_VERSION
ENV GIT_VERSION="${GIT_VERSION}"
ARG FLUENT_BIT_VERSION
ENV FLUENT_BIT_VERSION="${FLUENT_BIT_VERSION}"
ARG CONSUL_TEMPLATE_VERSION
ENV CONSUL_TEMPLATE_VERSION="${CONSUL_TEMPLATE_VERSION}"
ARG ENVCONSUL_VERSION
ENV ENVCONSUL_VERSION="${ENVCONSUL_VERSION}"
ENV AUTODETECT="false"
ENV DISABLE_HOOKS="false"
ENV PATH="/home/easy_infra/.local/bin:${PATH}"
ARG DEBIAN_FRONTEND="noninteractive"
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
# hadolint ignore=DL3003,DL3008,DL3013,SC1091
RUN groupadd --gid 53150 -r easy_infra \
 && useradd -r -g easy_infra -s "$(which bash)" --create-home --uid 53150 easy_infra \
 && apt-get update \
 && apt-get -y install --no-install-recommends bsdmainutils \
                                               ca-certificates \
                                               curl \
                                               gettext \
                                               groff \
                                               jq \
                                               less \
                                               time \
                                               tini \
 && apt-get -y upgrade \
 && su - easy_infra -c "mkdir -p /home/easy_infra/.ssh" \
 && su - easy_infra -c "touch /home/easy_infra/.ssh/known_hosts" \
 && echo "# START preloaded known_hosts as of $(date)" >> /home/easy_infra/.ssh/known_hosts \
 && apt-get -y install --no-install-recommends ssh \
 && ssh-keyscan gitlab.com \
                github.com \
                bitbucket.org \
                ssh.dev.azure.com \
                git-codecommit.us-east-1.amazonaws.com \
                git-codecommit.us-east-2.amazonaws.com \
                git-codecommit.us-west-1.amazonaws.com \
                git-codecommit.us-west-2.amazonaws.com \
    >> /home/easy_infra/.ssh/known_hosts \
 && echo "# END preloaded known_hosts as of $(date)" >> /home/easy_infra/.ssh/known_hosts \
 && apt-get remove -y ssh \
 # The apt-get install ssh generates keys that are unnecessary/unused and get flagged in secrets scans. They arenâ€™t auto cleaned up with an apt-get remove or purge
 && find /etc/ssh/ -type f -name '*key' -exec rm {} + \
 && mkdir -p /root/.ssh \
 && touch /root/.ssh/known_hosts \
 && cp /home/easy_infra/.ssh/known_hosts /root/.ssh/known_hosts \
 && if [ "${TRACE}" = "true" ]; then \
    apt-get -y install --no-install-recommends libcap2-bin \
                                               strace \
  ; fi \
 && su easy_infra -c "mkdir -p /home/easy_infra/.local/bin/" \
 && apt-get -y install --no-install-recommends unzip \
 && curl -L https://releases.hashicorp.com/consul-template/${CONSUL_TEMPLATE_VERSION#v}/consul-template_${CONSUL_TEMPLATE_VERSION#v}_linux_${BUILDARCH}.zip -o /usr/local/bin/consul-template.zip \
 && unzip /usr/local/bin/consul-template.zip -d /usr/local/bin/ \
 && rm -f /usr/local/bin/consul-template.zip \
 && chmod 0755 /usr/local/bin/consul-template \
 && curl -L https://releases.hashicorp.com/envconsul/${ENVCONSUL_VERSION#v}/envconsul_${ENVCONSUL_VERSION#v}_linux_${BUILDARCH}.zip -o /usr/local/bin/envconsul.zip \
 && unzip /usr/local/bin/envconsul.zip -d /usr/local/bin/ \
 && rm -f /usr/local/bin/envconsul.zip \
 && chmod 0755 /usr/local/bin/envconsul \
 && apt-get remove -y unzip \
 && apt-get install -y --no-install-recommends cmake \
                                               build-essential \
                                               flex \
                                               bison \
                                               libyaml-dev \
                                               libz-dev \
                                               libssl-dev \
                                               libcurl4-gnutls-dev \
                                               libexpat1-dev \
                                               make \
                                               gcc \
 # Build a new version of the git binary to support loading environment variables to designate safe directories
 # The minimum required version to support this method is 2.38.0 as per https://github.com/git/git/commit/6061601d9f1f1c95da5f9304c319218f7cc3ec75
 && mkdir /tmp/git \
 && curl -L https://mirrors.edge.kernel.org/pub/software/scm/git/git-${GIT_VERSION#v}.tar.gz -o /tmp/git.tar.gz \
 && tar -zxf /tmp/git.tar.gz -C /tmp/git --strip-components=1 \
 && cd /tmp/git \
 && make prefix=/usr/local install \
 && cd /tmp \
 && git clone https://github.com/fluent/fluent-bit --depth 1 --branch ${FLUENT_BIT_VERSION} \
 && cd fluent-bit/build \
 && cmake ../ && make && make install \
 && cd ../.. \
 && rm -rf fluent-bit \
 # Remove packages for building the git and fluent-bit binaries that are no longer needed
 && apt-get remove -y cmake \
                      build-essential \
                      flex \
                      bison \
                      libssl-dev \
                      libz-dev \
                      libexpat1-dev \
                      make \
                      gcc \
 && echo "source /functions" >> /home/easy_infra/.bashrc \
 && echo "source /functions" >> /root/.bashrc \
 && apt-get clean autoclean \
 && apt-get -y autoremove \
 # Must be after the autoremove for fluent-bit to work
 && apt-get remove -y libyaml-dev \
 && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/* /var/cache/debconf/*-old \
 && touch /var/log/easy_infra.log /var/log/fluent-bit.log /var/log/40-set_default_terraform_version.log /var/log/50-terraform_dynamic_version_use.log /var/log/clone.log /var/log/clone.err.log \
 && mkdir /iac \
 && chown -R easy_infra: /var/log/*.log /iac
USER easy_infra

COPY --chown=easy_infra:easy_infra functions /functions
COPY --chown=easy_infra:easy_infra docker-entrypoint.sh /usr/local/bin/
COPY --chown=easy_infra:easy_infra common.sh /usr/local/bin/
COPY --chown=easy_infra:easy_infra hooks /opt/hooks/bin/
COPY --chown=easy_infra:easy_infra fluent-bit.conf /usr/local/etc/fluent-bit/fluent-bit.conf
COPY --chown=easy_infra:easy_infra fluent-bit.inputs.conf /usr/local/etc/fluent-bit/fluent-bit.inputs.conf
COPY --chown=easy_infra:easy_infra fluent-bit.outputs.conf /usr/local/etc/fluent-bit/fluent-bit.outputs.conf

ENV BASH_ENV=/functions
WORKDIR /iac
ENTRYPOINT ["tini", "-g", "--", "/usr/local/bin/docker-entrypoint.sh"]

ARG VERSION="${EASY_INFRA_VERSION}"
ARG COMMIT_HASH

LABEL org.opencontainers.image.authors="Jon Zeolla"
LABEL org.opencontainers.image.licenses="BSD-3-Clause"
LABEL org.opencontainers.image.vendor="Seiso"
LABEL org.opencontainers.image.version="${VERSION}"
LABEL org.opencontainers.image.title="easy_infra"
LABEL org.opencontainers.image.description="This is a docker container that simplifies and secures Infrastructure as Code deployments"
LABEL org.opencontainers.image.url="https://seisollc.com"
LABEL org.opencontainers.image.source="https://github.com/SeisoLLC/easy_infra"
LABEL org.opencontainers.image.revision="${COMMIT_HASH}"
