---
name: "CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: Ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - uses: seisollc/goat@main
        with:
          disable_terrascan: true
          disable_mypy: true
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: docker-layer-caching-{hash}
          restore-keys: docker-layer-caching-
          concurrency: 5
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev
          mkdir "${RUNNER_TEMP}/bin"
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b "${RUNNER_TEMP}/bin"
          chmod +x "${RUNNER_TEMP}/bin/syft"
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b "${RUNNER_TEMP}/bin"
          chmod +x "${RUNNER_TEMP}/bin/grype"
          echo "${RUNNER_TEMP}/bin" >> "${GITHUB_PATH}"
      - name: Run tests
        run: |
          find tests -mindepth 1 -type d -exec chmod o+w {} \;
          pipenv run invoke test
      - name: Upload SBOMs
        uses: actions/upload-artifact@v2
        with:
          name: SBOMs
          path: sbom.*.json
          if-no-files-found: error
      - name: Upload Vuln scan results
        uses: actions/upload-artifact@v2
        with:
          name: Vulns
          path: vulns.*.json
          if-no-files-found: error
  distribute:
    name: Distribute
    if: ${{ github.event_name == 'push' }}
    runs-on: Ubuntu-20.04
    needs: Test
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev
      - name: Build the images
        run: pipenv run invoke build
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish the latest images to Docker Hub
        run: pipenv run invoke publish latest
      - name: Install cosign
        uses: sigstore/cosign-installer@main
      - name: Sign the images
        run:
          for tag in "latest-minimal"
                     "latest-aws"
                     "latest-az"
                     "latest"; do
            DIGEST=$(docker manifest inspect --verbose "seiso/easy_infra:$tag" |
                     jq -r '.Descriptor.digest') ;
            echo -n "${COSIGN_PASSWORD}" |
            cosign sign --key cosign.key
              -a git_sha="${GITHUB_SHA}"
              -a tag="${tag}"
              "seiso/easy_infra@${DIGEST}" ;
          done
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
