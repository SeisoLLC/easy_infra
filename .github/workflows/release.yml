---
name: "Release"

on:
  push:
    tags:
      - 'v2[0-1][0-9][0-9].0[0-9].[0-9][0-9]'
      - 'v2[0-1][0-9][0-9].1[0-2].[0-9][0-9]'

jobs:
  release:
    name: Release
    runs-on: Ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Retrieve the tag
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> "${GITHUB_ENV}"
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev
          mkdir "${GITHUB_WORKSPACE}/bin"
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b "${GITHUB_WORKSPACE}/bin"
          chmod +x "${GITHUB_WORKSPACE}/bin/syft"
          echo "${GITHUB_WORKSPACE}/bin" >> "${GITHUB_PATH}"
      - name: Install cosign
        uses: sigstore/cosign-installer@main
      - name: Build the images
        run: pipenv run invoke build --debug
      - name: Generate SBOMs
        run: pipenv run invoke sbom --debug
      - uses: actions/upload-artifact@v2
        with:
          name: SBOMs
          path: sbom.*.spdx.json
          if-no-files-found: error
      - name: Publish the release to GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.TAG }}
          draft: false
          prerelease: false
          files: sbom.*.spdx.json
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish the release README to Docker Hub
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: seiso/easy_infra
          short_description: |
            A docker container to simplify the use of Infrastructure as Code (IaC) tools
      - name: Publish the release images to Docker Hub
        run: pipenv run invoke publish release --debug
      - name: Sign the images
        run:
          for tag in "${TAG#v}-minimal"
                     "${TAG#v}-aws"
                     "${TAG#v}-az"
                     "${TAG#v}"; do
            DIGEST=$(docker manifest inspect --verbose "seiso/easy_infra:$tag" |
                     jq -r '.Descriptor.digest')
            echo -n "${{ secrets.COSIGN_PASSWORD }}" |
            cosign sign --key cosign.key
              -a git_sha="${GITHUB_SHA}"
              -a tag="${tag}"
              "seiso/easy_infra@${DIGEST}" ;
          done
